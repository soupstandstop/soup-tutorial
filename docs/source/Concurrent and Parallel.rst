Concurrent and Parallel
=======================

Summary
--------
Current: 當前/目前

Concurrent: 目前總共有n件事

在CPU角度，對於CPU來說，共有n件事要請我完成，所以在這一個小時以內（假設）我必須想盡辦法把眼前這些事情都完成，那麼我有幾種策略

1. 第一件事情做完再做第二件，第二件做完再做第三件，以此類推，直到最後一件事情做完
2. 第一件事情做一半，馬上接著做第二件，第二件事情也做一半，馬上做第三件，以此類推，每件事情我都做完一半，在做下一件
3. 第一件事情做兩成，再做第二件事情的兩成，以此類推

如果現在要我們設計一台電腦的作業系統，我要賣給一個青少年，那他的使用需求無非就是看Netflix、聊Line、聽YouTube Music、寫PPT
那麼如果我們使用上述三類方法，會有以下缺點

- 他必須看完Netflix，才能開啟Line聊天，聊天完畢才能聽歌．聽完歌才能做報告，**無法讓他同時做這四件事**
- 若某項需求只會用到極少的CPU，那麼CPU也只能被當前這件事情卡住閒置，**無法發揮CPU的最大利用**

所以若我們現在要讓這位青少年有更好的使用者體驗度，我們必須做到讓電腦可以

- 同時做這四件事情


Concurrent 併發
---------------

**對於CPU來說的一段時間區間**
作業系統會將每個Process能夠拿到CPU的時間切成一片一片的起司(誤)，一片一片的時間片（正確）
**這裡所謂的片是指極小的時間區間**
比如CPU花費0.0001毫秒處理Netflix播影片、接著CPU花費0.0001毫秒處理Line App、比如CPU花費0.0001毫秒處理YouTube Music播音樂、接著CPU花費0.0001毫秒處理Power Point

就可以 **假裝** 讓使用者覺得：哇！我的電腦可以同個時間處理好多事情！

但 **殘酷的事實** 是：CPU只是在這些時間片中間切換來切換去，並非真的同一時間點同時做了四件事情，只是你被騙啦～



Parallel 並行
---------------

**對於單CPU單核來說絕對不可能做到Parallel**
**所以Parallel只會發生在多CPU的電腦上**

這裡的Parallel指的真的就是同一時間點，有多個任務同時在執行

所以假設我買了中階的筆電內裝為2顆CPU，那麼一顆CPU對應到一個Process，所以我同一個時間點會有2個Process真的在執行

所以假設我買了高階的筆電內裝為6顆CPU，那麼一顆CPU對應到一個Process，所以我同一個時間點會有6個Process真的在執行


兩者的區別
---------------

一看上面兩個的名詞敘述就知道，Concurrent是窮人家筆電，只有一顆CPU內裝，只有一顆當然也行，只是需要耗費額外力氣

這裡說的Concurrent額外力氣是什麼呢？

比喻成人的專注度好了，當你在看偶像劇，但你媽媽突然打來說：孩子啊，你明天去costco幫我買幾樣東西唄，再來就是嘮嘮叨叨聊著一陣

聊天花了15分鐘，當你繼續播放偶像劇，總是會需要點時間回想一下：噢！剛剛是主角們跑去遊樂園玩啦～

這裡的額外力氣指的就是，你在不同事情間來回切換所需要耗費的力氣啦！回想剛剛的劇情大腦也是需要點力氣的嘛～

所以為什麼我說Concurrent指的是窮人家筆電呢？你一顆CPU要做這麼多工作，你光來回切換就要耗費一點時間了嘛～

Parallel相較起來就高大上許多，老子就是有錢，一台筆電裡面給你內裝6顆CPU，一個任務就讓給你一顆CPU給你專門執行，這還不高貴嘛？（果然資本主義還是挺邪惡的XD）
